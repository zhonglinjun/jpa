<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
	<persistence-unit name="jpa-1" transaction-type="RESOURCE_LOCAL">
	
	<!-- jpa的实现方式 - hibernate 
	 如果只有一个子类的JAR包，就可以不写
	<provider>org.hibernate.ejb.HibernatePersistence</provider>-->
	
	
			<!-- 
	配置二级缓存的策略 
	ALL：所有的实体类都被缓存
	NONE：所有的实体类都不被缓存. 
	ENABLE_SELECTIVE：标识 @Cacheable(true) 注解的实体类将被缓存
	DISABLE_SELECTIVE：缓存除标识 @Cacheable(false) 以外的所有实体类
	UNSPECIFIED：默认值，JPA 产品默认值将被使用
	-->
	<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
		
	
	
		<properties>
			<!-- 连接数据库的基本信息 -->
			<property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://127.0.0.1:3306/jpa1?serverTimezone=Asia/Shanghai"/>
			<property name="javax.persistence.jdbc.user" value="root"/>
			<property name="javax.persistence.jdbc.password" value="daraole."/>
		
		
			
			<property name="hibernate.connection.isolation" value="1"></property>
		
		
			<!-- 格式化SQL -->
			 <property name="hibernate.format_sql" value="true"/>
			 
			 <!-- 显示SQL -->
			 <property name="hibernate.show_sql" value="true"/>
			 
			<!-- create 先删除再创建 
			     create-drop    先删除再创建,用完了,再删除
			     update 修改(添加字段,不能删除字段),也可帮忙创建表
			     validate 只是过来验证(不帮忙做任务,只是校验是否一致)-->
			<property name="hibernate.hbm2ddl.auto" value="update"/>
			
			
			<!-- 介质 -->
			<property name="hibernate.cache.use_second_level_cache" value="true"/>
			<property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>
			<property name="hibernate.cache.use_query_cache" value="true"/>
			
			
		</properties>
	
	</persistence-unit>
</persistence>
